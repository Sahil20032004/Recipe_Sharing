package com.recipeSharing.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.recipeSharing.module.User;
import com.recipeSharing.repository.UserRepository;
import com.recipeSharing.response.AuthResponse;
import com.recipeSharing.service.CustomUserService;
import com.recipeSharing.config.JWProvider;

@RestController
@RequestMapping("/auth")
public class AuthController {

	@Autowired
	UserRepository userRepo;
	@Autowired
	CustomUserService customeUser;
	@Autowired
	PasswordEncoder passwordEncoder;
	@Autowired
	JWProvider jwtProvider;
	
	public AuthResponse createUser(@RequestBody User user) throws Exception {
		
		String email = user.getEmail();
		String password = user.getPassword();
		String name = user.getName();
		
		User isExist = userRepo.findByEmail(email);
		if(isExist!=null) {
			throw new Exception("User already registered");
		}
		
		User createUser = new User();
		createUser.setEmail(email);
		createUser.setName(name);
		createUser.setPassword(passwordEncoder.encode(password));
		
		User saveUser = userRepo.save(createUser);
		Authentication authentication = new UsernamePasswordAuthenticationToken(email,password);
		SecurityContextHolder.getContext().setAuthentication(authentication);
		String jwtToken = jwtProvider.generateToken(authentication); // creating jwttoken
		
		
		return null;
		
	}
	
}
